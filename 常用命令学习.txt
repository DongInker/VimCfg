命令     说明

********************
*移动操作
********************
j    向下
k    向上
h    向左
l    向右

w    到下一个单词的开头。
b    到上一个单词的开头。
e    到下一个单词的结尾。

W    到下一个字符串的开头。
B    到上一个字符串的开头。
E    到下一个字符串的结尾。

%    匹配括号移动，包括 (, {, [. （陈皓注：你需要把光标先移到括号上）

0    到行头
$    到行尾

_    到当前行首个字符 与^一样
g_   到本行最后一个不是blank字符的位置。

zz   当前光标置于屏幕中间显示
zt   当前光标置于屏幕顶部显示
zb   当前光标置于屏幕顶部显示

ctrl-f 上翻一页
ctrl-b 下翻一页

gg   到第一行 （相当于1G，或 :1)
G    到最后一行
nG   到第 n 行


Ctr+] 进入函数、定义、结构体
Ctr+o 返回函数、定义、结构体

*     查找光标所在处的单词，向下查找
#     查找光标所在处的单词，向上查找

****************************************************
*删除d 复制y 粘帖p 替换c  插入a i o 
****************************************************
a        在光标后插入
i        在光标前插入

o        在当前行后插入一个新行
O        在当前行前插入一个新行

cw       替换从光标所在位置后到一个单词结尾的字符
cb

p        表示粘贴在当前位置之后
P        表示粘贴在当前位置之前
yy       拷贝当前行
y3y      拷贝当前向下3行
yyp      拷贝当前行粘贴到当前行之后
yyP      拷贝当前行粘贴到当前行之前
yaw      拷贝一个单词

dw       删除一个单词后面
db       删除一个单词前面
dd       删除当前行
d3d      删除当前行向下3行
ddp      交换上下行
D        删除到行尾

yiw      拷贝当前光标一个单词,不包空白
yaw      拷贝当前光标一个单词,包括空白
diw      删除当前光标一个单词,不包空白字符
daw      删除当前光标一个单词,包括空白字符
 
/char     搜索 char 的字符串（如果搜索出多个匹配，可按n键到下一个）
/\<char\> 搜索单个次char，充分使用\< \>进行过滤。

n         向下搜索匹配词
N         向上搜索匹配词
* #       匹配光标当前所在的单词，*移动光标到下一个 #上一个匹配单词

u        撤销
Ctrl+r   恢复

%        跳转到配对的括号去
[[       跳转到当前或者上一代码块(函数定义、类定义等)的开头去(但要求代码块中'{'必须单独占一行)
][       跳转到当前代码块(函数定义、类定义等)的结尾去(但要求代码块中'{'必须单独占一行)
]]       跳转到下一代码块(函数定义、类定义等)的开头去(但要求代码块中'{'必须单独占一行)

:e e:main.c  打开e盘main.c文件
:bp      切换上一个文件
:bn      切换下一个文件
:w       存盘
:saveas <path/to/file> → 另存为 <path/to/file>
:x， ZZ 或 :wq → 保存并退出 (:x 表示仅在需要时保存，ZZ不需要输入冒号并回车)
:q! → 退出不保存 :qa! 强行退出所有的正在编辑的文件，就算别的文件有更改。


:set   nu!   开启行号
:set nonu!   关闭行号

:set   ic    忽略大小写
:set noic    区分大小写

:set   hlsearch     开启高亮显示搜索词
:set nohlsearch     关闭高亮显示搜索词
:    nohlsearch     仅关闭当前搜索的高亮，下次搜索又会高亮

*********************
**VIM配置文件操作
*打开_vimrc
:edit $vim/_vimrc
:ed   $vim/_vimrc

*重载_vimrc
:so $vim/_vimrc

*********************
**替换字符
在一行内替换头一个字符串 old 为新的字符串 new，请输入   :s/old/new
在一行内替换所有的字符串 old 为新的字符串 new，请输入   :s/old/new/g
*******************
在两行内替换所有的字符串 old 为新的字符串 new，请输入   :#,#s/old/new/g
在文件内替换所有的字符串 old 为新的字符串 new，请输入   :%s/old/new/g
进行全文替换时询问用户确认每个替换需添加 c 选项，请输入 :%s/old/new/gc


*********************
**%
如果光标当前位置是括号(、)、[、]、{、}，
按 % 可以将光标移动到配对的括号上。

*********************
Ctrl-g 用于显示当前光标所在位置和文件状态信息

*********************
**.只能重复单个命令 可以使用寄存器记录实现复杂命令集
**查看帮助 usr_10.txt 做大修改 
启动a组记录         qa
结束a组记录         q
显示a记录过程并修改 "ap
回写修改后a记录     0 "ay$
执行a组记录         @a  3@a
a组记录追加         qA

寄存器名可以用 a 到 z 中任一个字母表示,总共26组

*********************
**书签 Mark
小写的是文件书签，可用(a-z）中任意字母标记。
大写的是全局书签，可用(A-Z) 中任意字母标记。

创建一个书签
m{a-zA-Z}
打开一个书签
'{a-zA-Z}
'0 打开上次退出的位置
:marks -> 显示系统全部书签
:delm! -> 删除全部书签 (delete all marks)
:delm {marks} -> 删除一个书签 例如:delm a那么就删除了书签a


*********************
**自动补全功能

Ctrl+P	向前切换成员
Ctrl+N	向后切换成员
Ctrl+E	表示退出下拉窗口, 并退回到原来录入的文字
Ctrl+Y	表示退出下拉窗口, 并接受当前选项

Ctrl+X Ctrl+L   整行补全
Ctrl+X Ctrl+N	根据当前文件里关键字补全
Ctrl+X Ctrl+K	根据字典补全
Ctrl+X Ctrl+T	根据同义词字典补全
Ctrl+X Ctrl+I	根据头文件内关键字补全
Ctrl+X Ctrl+]	根据标签补全
Ctrl+X Ctrl+F	补全文件名
Ctrl+X Ctrl+D	补全宏定义
Ctrl+X Ctrl+V	补全vim命令
Ctrl+X Ctrl+U	用户自定义补全方式
Ctrl+X Ctrl+S	拼写建议

*********************
**搜索结构体成员
SysParam.Dbg

1 y3e (w会有空格所以使用e)
2 :cs find e <CTRL+R> <0>


----------------------------------------------------
*可视模式
*********************
v（小写） 字符选择，会将光标经过的地方反白选择
V（大写） 行选择，会将光标经过的行反白选择
Ctrl+q    块选择，按o，O来切换四个顶点
注意：在windows系统中 control+v被系统占用了，所以改为control+q完成相同的功能。 (;v)
eg:
使用块完成多行注释 I A $
1 Ctrl+q进入块选择n行
2 I进入插入模式 //
3 ESC 

----------------------------------------------------
*调整窗口大小 切换 分屏
*********************
C-wv 分屏
C-wh 切换左边屏
C-wl 切换右边屏
C-wc 关闭分屏
Ctr+w 20 |   调整当前窗口水平宽度为20
Ctr+w 1  _     调整窗口为1行 比如标签栏调整
Ctr+w 20 _    调整窗口为20行 比如Quickfix窗口调整

----------------------------------------------------
*缩进 >  < 
*********************
3<<      3行向左缩进
2>>      2行向右缩进


a 按v进入visual状态，选择多行，用>或<缩进或缩出 
  使用.重复执行缩进
b :20,30>>>  20行到30行缩进3次
  :<Ctrl-r>:    重复执行最近一条命令

----------------------------------------------------
*重复执行最近一次命令
*********************
1  :<Ctrl-r>:
2  @: 重复执行最近一次命令
3 3@: 重复执行3次最近命令

----------------------------------------------------
*使用二进制与字符查看和编辑文件
*********************
二进制查看:
:%!xxd -g 1
返回字符模式:
:%!xxd -r

----------------------------------------------------
*折叠代码 
*********************
_vimrc 定义
set fdm=marker   " indent
set fdm=syntax   " 启动时开启折叠功能

zm      强制折叠代码
zi      开启/关闭全部折叠(不会折叠zo打开的代码部分)
zc      折叠
zC      对所在范围内所有嵌套的折叠点进行折叠
zo      展开折叠
zO      对所在范围内所有嵌套的折叠点展开
[z      到当前打开的折叠的开始处。
]z      到当前打开的折叠的末尾处。
zj      向下移动。到达下一个折叠的开始处。关闭的折叠也被计入。
zk      向上移动到前一折叠的结束处。关闭的折叠也被计入。


****************************************************
* My New Keyboard
****************************************************
|---------+----------|-----------|--------------------------+
|mode nvi:| New key  | Old key   |         Cmd              |
|---------+----------|-----------|--------------------------+
|         |    F2    |           | 下一个可视标记行         |
|         |  S-F2    |           | 上一个可视标记行         |
|         |    F6    |           | 开/关QuickFix窗口        |
|         |    F7    |           | QuickFix 前一项          |
|         |    F8    |           | QuickFix 后一项          |
|         |    F9    |           | 切换.h与.c文件           |
|         |  C-F12   |           | 更新csope tags库         |
|         |   wm     |           | 开/关 Tag_List窗口       |
|         |   wv     | <C-w>v    | 垂直分割窗口             |
|         |   ws     | <C-w>s    | 水平分割窗口             |
|         |   wc     | <C-w>c    | 关闭当前窗口             |
|         |   wh     | <C-w>h    | 跳到左边窗口             |
|         |   wj     | <C-w>j    | 跳到下边窗口             |
|         |   wk     | <C-w>k    | 跳到下边窗口             |
|         |   wl     | <C-w>l    | 跳到右边窗口             |
|         |   kk     | <ESC>     | 插入模式返回Norm         |
|         |   wn     |           | 调整当前窗口 50列        |
|         |   wb     |           | 调整当前窗口100列        |
| n       | <C-h>    |           | 调整当前窗口变大         |
| n       | <C-l>    |           | 调整当前窗口变小         |
| n v     | tab      | %         | tab替换 %                |
| n v     | <C-j>    | <C-f>     | 下一页代码               |
| n v     | <C-k>    | <C-b>     | 上一页代码               |
|---------+----------|-----------|--------------------------+

****************************************************
* My New mapleader Key  ( , )
****************************************************
+----------|----------------------|--------------------------+
| New key  | Old key              |         Cmd              |
+----------|----------------------|--------------------------+
|   ,y     | "*y                  | 复制到系统复制板         |
|   ,p     | "*p                  | 粘贴  系统复制板         |
|   ,P     | "*P                  | 粘贴  系统复制板         |
|   ,v     | <C-q>                | 可视块选择               |
|   ,ff    |:cs find f            | 打开文件                 |
|   ,fe    |:cs find e            | 查找字符串出现所以位置   |
|   ,fg    |:cs find d            | 跳至定义位置             |
|   ,fs    |:cs find s            | 查找当前词出现所以位置   |
|   ,wa    |:wall<cr>             | 保存所以文件             |
|   ,wf    |:w<cr>                | 保存当期文               |
|   ,lf    |:LUTags<cr>           | 查找指定文件 使用技巧.c文件使用demopr搜索 .h文件使用 _demo搜索
|   ,ll    |:LUBufs<cr>           | 查找缓存字符             |
|   ,lw    |:LUWalk<cr>           | 查找目录结构             |
|   ,bin   |:%!xxd -g 1           | 二进制显示               |
|   ,char  |:%!xxd -r             | 字符显示                 |
|   ,ecfg  |:ed $VIM/_vimrc<cr>   | 打开编辑VIM配置文件_vimrc|
|   ,scfg  |:so $VIM/_vimrc<cr>   | 重新加载VIM配置文件_vimrc|
+----------|----------------------|--------------------------+

****************************************************
* Alt Key Map
****************************************************
inoremap <A-j> <ESC>:w!<cr>
nnoremap <A-j> <ESC>
vnoremap <A-j> <ESC>
nnoremap <A-l> e
vmap <A-l> e
inoremap <A-l> <ESC>e
nnoremap <A-h> b
vmap <A-h> b
inoremap <A-h> <ESC>b
nnoremap <A-y> yiw
nnoremap <A-p> viwp


****************************************************
* My User Cmd
****************************************************
|--------------------------+----------------------
| 命令                     | 操作功能             
|--------------------------+----------------------
| @: 3@: :<Ctrl-r>:        |执行最近一次命令      
| <C-r>0                   |: / ? 输入复制字符串  
| <C-]>                    |跳转进入函数 变量 定义
| <C-o>                    |返回跳转函数 变量 定义
| <C-i>                    |执行上次Ctrl + ]
| yiw                      |复制当前光标下的词    
| diw                      |删除当前光标下的词    
| cib ci( ci{              |删除指定区域进入插入模式
| dab di( di{              |删除指定区域
| ddp                      |交换上下行            
| gd                       |跳转到当前函数局部变量定义处  
| gD                       |跳转到当前文件全局变量定义处  
| gg                       |跳转到首行            
| G                        |跳转到末行            
| nG                       |跳转到第n行           
| 0                        |跳转到行首
| $                        |跳转到行尾
| _                        |跳转到行首非空字符    
| g_                       |跳转到行未非空字符    
| <C-w>n|                  |调整窗口水平为n宽     
| <C-w>n_                  |调整窗口垂直为n高     
| <C-w>H/J/K/L             |移动当前窗口的位置    
| [[                       |移动上一个函数{位置   
| []                       |移动上一个函数}位置   
| ]]                       |移动下一个函数{位置   
| ][                       |移动下一个函数}位置   
| *                        |向前搜当前字符        
| #                        |向后搜当前字符        
| .                        |重复执行上一次操作    
| :marks                   |显示标签信息          
| :reg                     |显示寄存器信息        
| :map                     |查看所以快捷映射表
| :imap                    |查看编辑模式所以快捷映射表
| :nmap                    |查看普通模式所以快捷映射表
| :vmap                    |查看可视模式所以快捷映射表
| :cmap                    |查看命令模式所以快捷映射表
| "0p "1p                  |粘帖前n次寄存值       
| '.                       |到当前文件最后改动位置
| gg=G                     |当前文件所以行自动对齐
| <Ctrl-o>                 |临时退出插入模式执行1个命令后自动返回插入模式
| zi                       |开启/关闭全部折叠(不会折叠zo打开的代码部分可使用zm)
| mm                       |标记/取消可视标签 配合F2进行跳转可视标签
| m + 大写字母             |全局标记
| “ + 大写字母             |跳转到全局标记
| f F + char               |使用F f命令在行内进行快速移到到指定字符上
| ;                        |重复F f命令在行内进行快速移到到指定字符上
| :nb                      |快速打开缓存区编号为n的文件 :2b<CR>
|--------------------------+----------------------


****************************************************
*缩写 + <Space> = 完整
****************************************************
:ab[breviate] 作用于所有模式
+-------------|-------------+
|    缩写     |    完整     |
+-------------|-------------+
|             |             |
+-------------|-------------+

:iab[brev]    作用于插入模式
+-------------|-------------+
|    缩写     |    完整     |
+-------------|-------------+
| #d          | #define     |
| #f          | #ifdef      |
| vo          | volatile    |
| con         | continue    |
| xtime<回车> | 插入当前时间|
+-------------|-------------+

:cab[brev]    作用于命令模式
+-------------|-------------+
|    缩写     |    完整     |
+-------------|-------------+
|             |             |
+-------------|-------------+
 
  
   
